
mixin funcdecl(func, isCtor)
	- var id = func && tools.idFromLongname(func.longname)
	a(href=apiPath + '#' + id + (isCtor ? '-ctor' : ''))
		+funcdeclx(func.name, func, isCtor)
		span.link
			a(href=apiPath + '#' + id)
		
- var colors = {'class': 'orange', 'module': 'purple', 'function': 'teal', 'member': 'blue', 'constant': 'red'}

mixin childlist(node, root)
	each child in childs(node)
		- var hasChildren = childs(child.node).length > 0
		- var doclet = child.node.__doclet
		- var id = doclet && tools.idFromLongname(doclet.longname)
		if hasChildren
			.ui.inverte.accordion
				if doclet
					.title.active(id='nav-' + id)
						i.dropdown.icon
						a(href=apiPath + '#' + id)= child.name
							span.kind.ui.circular.label(class=doclet.kind + ' ' + colors[doclet.kind])
				else
					.title.active
						i.dropdown.icon
						span= child.name
							span.kind(class='namespace') {}
				.content.active
					+childlist(child.node)
		else if doclet
			.leaf(id='nav-' + id)
				a(href=apiPath + '#' + id)= child.name
					span.kind.ui.circular.label(class=doclet.kind + ' ' + colors[doclet.kind])


mixin module(module)
	.module
		.ui.inverte.accordion
			- var id = tools.idFromLongname(module.longname)
			.title.active(id='nav-' + id)
				i.dropdown.icon
				if module.longname != 'globals'
					a(href=apiPath + '#' + id)= tools.modulename(module.longname)
						span.kind.ui.circular.label(class='module ' + colors.module)
				else
					a(href=apiPath + '#' + id)
						em Globals
						span.kind.ui.circular.label(class='module ' + colors.module)
			.content.active
				+childlist(module.childs)


nav#api-nav.ui.left.inline.inverte.large.vertical.menu.visible
	#nav-title.item.header
		h3= repo
		h4.version= 'Rev: ' + version
	each article in articles
		a.item(href=articlesPath + article.id)= article.title
	.item.api
		h2.header 
			a(href='#') API
		- var globals = _.findWhere(tree, {longname: 'globals'})
		if tree.length > 1 && childs(globals).length > 0
			each module in tree
				+module(module)
		else
			.module
				+childlist(globals.childs)



