
mixin funcdecl(func, isCtor)
	a(href='#' + func.longname + (isCtor ? '~ctor' : ''))
		+funcdeclx(func, isCtor)
		span.link
			a(href='#' + func.longname)
		

mixin clazz(clazz)
	h4.clazzname(class=clazz.kind=='interface' ? 'interface' : undefined)
		a(href='#' + clazz.longname)= clazz.name
	- var functions = _.filter(clazz.members, function(doclet) {return doclet.kind === 'function';});
	- var constants = _.filter(clazz.members, function(doclet) {return doclet.kind === 'constant';});
	- var members = _.filter(clazz.members, function(doclet) {return doclet.kind === 'member';});
	- var callbacks = _.filter(clazz.members, function(doclet) {return doclet.kind === 'typedef';}); // && doclet.type && doclet.type.names.find('function')});
	
	if constants.length > 0
		ul.constants
			each constant in tools.sortByName(constants)
				li.constant= constant.name
	if members.length > 0
		ul.members
			each member in tools.sortByName(members)
				li.member= member.name
	if functions.length > 0
		ul.functions
			li
				+funcdecl(clazz, true)
			each func in tools.sortByName(functions)
				li
					+funcdecl(func)
	if callbacks.length > 0
		ul.callbacks
			each callback in tools.sortByName(callbacks)
				li
					+funcdecl(callback)

mixin module(id)
	- var module = modules[id];
	if id !== '_GLOBAL'
		h4.modulename
			a(href='#' + id)= tools.modulename(id)
	if module.constants.length > 0
		ul.constants
			each constant in tools.sortByName(module.constants)
				li.constant
					a(href='#' + constant.longname)= constant.name
	if module.functions.length > 0
		ul.functions
			each func in tools.sortByName(module.functions)
				li.function
					+funcdecl(func)
	if module.interfaces.length > 0
		ul.interfaces
			each interface in tools.sortByName(module.interfaces)
				li.interface
					+clazz(interface)
	if module.classes.length > 0
		ul.clazzes
			each clazz in tools.sortByName(module.classes)
				li.clazz
					+clazz(clazz)
	if module.externals.length > 0
		ul.externals
			each external in tools.sortByName(module.externals)
				li.external
					a(href='#' + external.longname)= external.name


nav
	ul.modules
		li.module
			+module('_GLOBAL')
		each id in _.filter(_.keys(modules), function(name) { return name !== '_GLOBAL'; })
			li.module
				+module(id)
