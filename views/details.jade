mixin examples(examplesArray)
	each example in examplesArray
		pre.example
			code= example


mixin see(seeArray)
	span Links:
	ul
		each see in seeArray
			- var link = tools.linkFromSee(see);
			li
				a(href=link.url)= link.name || link.url

mixin funcDoclet(func, isCtor, parent)
	h2.title
		span.ui.horizontal.cyan.big.label 
			em f
		+funcdeclx(func, isCtor, parent)
		span.link.right.floated
			if func.meta.url
				a(href=func.meta.url).braces
					i.icon.code
			a(href='#' + func.longname)
				i.icon.linkify
	if func.params && func.params.length > 0
		p Arguments:
		+paramsList(func.params)
	if func.returns && func.returns.length > 0
		p Returns:
		+paramsList(func.returns)
	if func.description
		+optMarkdown(func.description, 'description')
	if func.examples
		+examples(func.examples)
	if func.see
		+see(func.see)

	
		
mixin title(doclet, prefix)
	h2.title
		.ui.horizontal.big.label.red= doclet.kind
		if prefix
			span.prefix= prefix + ' '
		span= doclet.name
	h5
		span Fullname: 
		span= doclet.longname
		span.link.right.floated
			if doclet.meta && doclet.meta.url
				a(href=doclet.meta.url).braces
					i.icon.code
			a(href="#" + doclet.longname)
				i.icon.linkify
	

mixin simpleDoclet(doclet)
	+title(doclet)
	if doclet.inherited
		div
			span Inherited from: 
				a(href='#' + doclet.inherits)= tools.shortName(doclet.inherits)
	else
		if doclet.description
			+optMarkdown(doclet.description, 'description')
		else
			p
				em No description available.
		if doclet.examples
			+examples(doclet.examples)
		if doclet.see
			+see(doclet.see)
	


mixin paramDetails(param)
	h4.paramname= param.name
		if param.type
			ul.types
				each type in param.type.names
					li.typename
						if tools.isBuiltInType(type)
							span= type
						else
							a(href='#' + type)= type
		if param.optional
			span.optional optional
		if param.defaultvalue !== undefined
			span.default , default: 
			span.defaultvalue= param.defaultvalue
	if param.description
		+optMarkdown(param.description, 'description')

mixin paramsList(params)
	ul.params
		each param in params
			li
				+paramDetails(param)

mixin clazzDoclet(doclet)
	+title(doclet)
	if doclet.classdesc
		+optMarkdown(doclet.classdesc, 'classdesc')

mixin interfaceDoclet(doclet)
	+title(doclet)
	if doclet.classdesc
		+optMarkdown(doclet.classdesc, 'classdesc')
	if doclet.description
		+optMarkdown(doclet.description, 'description')
	if !doclet.classdesc && !doclet.description
		p
			em No description available.
	

mixin detailsFooter(doclet)
	a.codelink(href=doclet.meta.url, target='_blank')
		i.icon.code
		span= doclet.meta.filename + ':' + doclet.meta.lineno
	
mixin details(doclet)
	- var id = tools.idFromLongname(doclet.longname)
	case doclet.kind
		when 'module'
			article.module(id=id)
				+module(doclet)
				+detailsFooter(doclet)
		when 'class'
			article.clazz(id=id)
				+clazzDoclet(doclet)
				+detailsFooter(doclet)
			article.ctor(id=id+'-ctor')
				+funcDoclet(doclet, true)
				+detailsFooter(doclet)
		when 'interface'
			article.interface(id=id)
				+interfaceDoclet(doclet)
				+detailsFooter(doclet)
		when 'function'
			article.function(id=id)
				+funcDoclet(doclet)
				+detailsFooter(doclet)
		default
			article(class=doclet.kind, id=id)
				+simpleDoclet(doclet)
				+detailsFooter(doclet)
	
mixin module(module)
	h2.modulename(id=module.longname)
		.ui.horizontal.big.purple.label module
		span= tools.modulename(module.longname)
	if module.description
		+optMarkdown(module.description, 'moduledescription')
	else
		p
			em No description available.


each doclet in flat
	+details(doclet)

