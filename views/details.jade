mixin funcDoclet(func, isCtor, parent)
	h3(id=func.longname + (isCtor ? '~ctor' : ''))
		+funcdeclx(func, isCtor, parent)
		span.link
			a(href='#' + func.longname)= '#'
	if func.params && func.params.length > 0
		p Arguments:
		+paramsList(func.params)
	if func.returns && func.returns.length > 0
		p Returns:
		+paramsList(func.returns)
	if func.description
		+optMarkdown(func.description, 'description')

	
		
mixin title(doclet, prefix)
	h3(id=doclet.longname)
		if prefix
			span= prefix
		span= doclet.name
		span.link
			a(href="#" + doclet.longname)= '#'

mixin simpleDoclet(doclet)
	+title(doclet)
	if doclet.description
		+optMarkdown(doclet.description, 'description')


mixin paramDetails(param)
	h4.paramname= param.name
		if param.type
			ul.types
				each type in param.type.names
					li.typename= type
		if param.optional
			span.optional optional
	if param.defaultvalue !== undefined
		span.default Default value: 
		span.defaultvalue= param.defaultvalue
		span .
	if param.description
		+optMarkdown(param.description, 'description')

mixin paramsList(params)
	ul.params
		each param in params
			li
				+paramDetails(param)

mixin clazzDoclet(doclet)
	+title(doclet, 'Class:')
	if doclet.classdesc
		+optMarkdown(doclet.classdesc, 'classdesc')
	+funcDoclet(doclet, true)
	- var functions = _.filter(doclet.members, function(doclet) {return doclet.kind === 'function';});
	- var constants = _.filter(doclet.members, function(doclet) {return doclet.kind === 'constant';});
	each constant in tools.sortByName(constants)
		+simpleDoclet(constant)
	each func in tools.sortByName(functions)
		+funcDoclet(func, false, doclet.name)
	
	

mixin module(id)
	- var module = modules[id];
	if id !== '_GLOBAL'
		h2.modulename(id=module)
			span module
			span= tools.modulename(id)
		if module.doclet.description
			+optMarkdown(module.doclet.description, 'moduledescription')
	each constant in tools.sortByName(module.constants)
		article.constant
			+simpleDoclet(constant)
	each func in tools.sortByName(module.functions)
		article.function
			+funcDoclet(func)
	each interface in tools.sortByName(module.interfaces)
		article.interface
			+clazzDoclet(interface)
	each clazz in tools.sortByName(module.classes)
		article.clazz
			+clazzDoclet(clazz)


section.module
	+module('_GLOBAL')
each id in _.filter(_.keys(modules), function(name) {return name !== '_GLOBAL';})
	section.module
		+module(id)
